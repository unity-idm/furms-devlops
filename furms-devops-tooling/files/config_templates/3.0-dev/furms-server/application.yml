app:
   version: '@project.version@'

server:
   port: {{furmsServer.port}}
   address: {{furmsServer.host}}
   ssl:
      key-store-type: {{furmsServer.pki.keyStore.type}}
      key-store-password: {{furmsServer.pki.keyStore.password}}
      key-store: ./{{keystoreTargetFileName}}
      key-password: ${server.ssl.key-store-password}
      enabled-protocols: TLSv1.2, TLSv1.3

furms:
   unity:
      url: https://{{unity.advertisedHost}}
      ssl:
         trust-store: file:./{{truststoreTargetFileName}}
         trust-store-password: {{trustStore.password}}

      admin-url: https://{{unity.host}}:{{unity.port}}/rest-admin/v1
      admin-user: {{unityApiClientUsername}}
      admin-password: {{unityApiClientPassword}}
      oAuth:
         clientId: {{unityOauthClientUsername}}
         clientSecret: {{unityOauthClientPassword}}
   url: https://{{furmsServer.advertisedHost}}
   psk:
      centralIdPUser: {{furmsServer.preSharedKeys.cIdP.username}}
      centralIdPSecret: {{furmsServer.preSharedKeys.cIdP.password}}
   front:
      language: en
      maxSessionInactivity: {{furmsServer.ui.maxSessionInactivityInSeconds if furmsServer.ui.maxSessionInactivityInSeconds is defined else '1800'}}
      secondsBeforeShowingSessionExpirationWarning: {{furmsServer.ui.secondsBeforeShowingLogoutWarning if furmsServer.ui.secondsBeforeShowingLogoutWarning is defined else '120'}}
   sshkeys:
      cleanStaleRequestsAfter: 1D
   notification:
      new-policy-template-id: policyAcceptanceNew
      new-policy-revision-template-id: policyAcceptanceRevision
      new-invitation-template-id: invitationNew
   invitations:
      expiration-time-in-seconds: 604800
      fenix-admin-form: fenixAdminForm

spring:
   profiles:
      active: demo-data-provisioning,workshop
   datasource:
      url: jdbc:postgresql://{{furmsServer.db.host}}/{{furmsServer.db.dbName}}
      username: {{furmsServer.db.username}}
      password: {{furmsServer.db.password}}
      driver-class-name: org.postgresql.Driver
   rabbitmq:
      host: {{furmsServer.broker.host}}
      port: {{furmsServer.broker.port}}
      username: {{furmsServer.broker.username}}
      password: {{furmsServer.broker.password}}
      connection-timeout: 10000
      virtualHost: {{furmsServer.broker.virtualHost}}
      ssl:
          enabled: true
          trustStore: ${furms.unity.ssl.trust-store}
          trustStorePassword: ${furms.unity.ssl.trust-store-password}
          algorithm: TLSv1.2

logging:
    config: ./logback.xml
